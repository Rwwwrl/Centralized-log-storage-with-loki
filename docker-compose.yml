services:
  main_app:
    build:
      context: .
    # command: sleep infinity
    command: python src/main.py
    image: main_app
    container_name: main_app
    volumes:
      - ./src/:/usr/code/loki_testing/src

  read:
    build:
      context: deploy/loki
    container_name: loki_read
    command: "-config.file=/etc/loki/config.yaml -target=read -config.expand-env=true"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      - minio

  write:
    build:
      context: deploy/loki
    container_name: loki_write
    command: "-config.file=/etc/loki/config.yaml -target=write -config.expand-env=true"
    depends_on:
      - minio

  minio:
    build:
      context: deploy/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    volumes:
      - minio_data:/data

  promtail:
    build:
      context: deploy/promtail
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - nginx

  grafana:
    build:
      context: deploy/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}

  nginx:
    build:
      context: deploy/nginx
    container_name: nginx
    depends_on:
      - read
      - write
    ports:
      - 3000:3000
      - 9001:9001
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio_data:
